// Generated by CoffeeScript 1.3.3
(function() {
  var App, HEIGHT, SMALL_DISTANCE, WIDTH, isSmallDistance,
    _this = this;

  WIDTH = 600;

  HEIGHT = 400;

  SMALL_DISTANCE = 0.005;

  App = {
    cursors: {},
    objects: {},
    calculatePos: function(x, y) {
      return [x * WIDTH, y * HEIGHT];
    },
    callbacks: {
      init: function() {
        $("#container").css({
          width: WIDTH,
          height: HEIGHT
        });
        return $("#button1").click(function() {
          return alert("Clicked!");
        });
      },
      click: function(x, y) {
        var el, xp, yp, _ref;
        console.log("click " + x + " x " + y);
        _ref = App.calculatePos(x, y), xp = _ref[0], yp = _ref[1];
        el = document.elementFromPoint(xp, yp);
        console.log([x, y, xp, yp, el]);
        return $(el).click();
      }
    }
  };

  this.tuio.object_add(function(data) {
    return console.log('[object] add: sid=' + data.sid + ', fid=' + data.fid + ', x=' + data.x + ', y=' + data.y + ', angle=' + data.angle);
  });

  this.tuio.object_update(function(data) {
    return console.log('[object] update: sid=' + data.sid + ', fid=' + data.fid + ', x=' + data.x + ', y=' + data.y + ', angle=' + data.angle);
  });

  this.tuio.object_remove(function(data) {
    return console.log('[object] remove: sid=' + data.sid + ', fid=' + data.fid + ', x=' + data.x + ', y=' + data.y + ', angle=' + data.angle);
  });

  this.tuio.cursor_add(function(data) {
    return App.cursors[data.sid] = {
      origin: {
        x: data.x,
        y: data.y
      }
    };
  });

  this.tuio.cursor_update(function(data) {});

  isSmallDistance = function(x1, y1, x2, y2) {
    return Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2) < SMALL_DISTANCE;
  };

  this.tuio.cursor_remove(function(data) {
    var origin;
    origin = App.cursors[data.sid].origin;
    if (isSmallDistance(origin.x, origin.y, data.x, data.y)) {
      App.callbacks.click(origin.x, origin.y);
    }
    return delete App.cursors[data.sid];
  });

  this.init = function() {
    tuio.start();
    return App.callbacks.init();
  };

}).call(this);
